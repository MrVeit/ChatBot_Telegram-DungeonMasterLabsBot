import asyncio
import bot_items.messages_pack

import user_handlers.user.user_keyboard as keyboard
import user_handlers.inline.inline_keyboard as inline_button
from database import user_memory

from loader import bot, dp, executor
from aiogram import types
from aiogram.types import ChatActions
from bot_items.config import admin_id
from bot_items.files_pack import sticker_dev_matrix, sticker_ubivan


@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    user_id = message.from_user.id
    full_name_user = str(message.from_user.username)
    user_memory.create_users_database(message)
    await message.answer(f"–Ø –≤–∞—Å –∫–∞—Ç–µ–≥–æ—Ä–∏—á–µ—Å–∫–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, @*{full_name_user}* üë∫",
                         reply_markup=keyboard.main_markup)
    await bot.send_chat_action(user_id, ChatActions.UPLOAD_VIDEO_NOTE)
    await asyncio.sleep(0.65)
    await bot.send_video(user_id, open('files/gacha_hi.mp4', 'rb'))
    await message.answer(bot_items.messages_pack.start_message, reply_markup=inline_button.start_dialog)


@dp.message_handler(commands=['help'])
async def help_command(message: types.Message):
    user_id = message.from_user.id
    await bot.send_chat_action(user_id, ChatActions.CHOOSE_STICKER)
    await asyncio.sleep(0.65)
    await bot.send_sticker(user_id, sticker_dev_matrix)
    await message.answer(bot_items.messages_pack.help_message, reply_markup=inline_button.inline_packsLabs_full)


@dp.message_handler(commands=['stat'])
async def load_stat(message: types.Message):
    chat_id = message.chat.id
    current_users = user_memory.sort_current_users()

    if chat_id == admin_id:
        await message.answer(f'‚öôÔ∏è –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–∏—Å—Ç–µ–º—ã Master Labs:'
                             f'\n\n| –ü–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä | –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä TG | –ù–∏–∫–Ω–µ–π–º |'
                             f'\n\n*{current_users}*')
    else:
        await message.answer(f'–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞, –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç,'
                             f'–≤–∞—à —Å—Ç–∞—Ç—É—Å –≤ —Å–∏—Å—Ç–µ–º–µ: *fucking slave üåö*')


@dp.message_handler(commands=['mail'])
async def mailing_list(message: types.Message):
    chat_id = message.chat.id
    bad_chars = ['/', 'm', 'a', 'i', 'l']
    id_users = user_memory.read_current_users()
    current_message = message.text[message.text.find(''):]
    current_message = filter(lambda t: t not in bad_chars, current_message)
    message_for_users = "".join(current_message)

    if chat_id == admin_id:
        await bot.send_message(chat_id, f"*–†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å üß∏ "
                                        f"\n\n–ë–æ—Ç –æ–ø–æ–≤–µ—Å—Ç–∏—Ç, –∫–æ–≥–¥–∞ —Ä–∞—Å—Å—ã–ª–∫—É –∑–∞–∫–æ–Ω—á–∏—Ç!*")
        receive_users = 0
        block_users = 0

        for user in range(len(id_users)):
            try:
                await bot.send_message((id_users[user][0]), message_for_users)
                receive_users += 1
            except:
                block_users += 1
            await asyncio.sleep(0.65)
        await bot.send_message(chat_id, f"*–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ! ü•≥*\n\n"
                                        f"–ü–æ–ª—É—á–∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: *{receive_users}* slaves ‚úÖ\n"
                                        f"–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –±–æ—Ç–∞: *{block_users}* assholes ‚ùå")


@dp.message_handler(commands=['remove'])
async def remove_command(message: types.Message):
    user_id = message.from_user.id
    await bot.send_chat_action(user_id, ChatActions.CHOOSE_STICKER)
    await asyncio.sleep(0.65)
    await bot.send_sticker(user_id, sticker_ubivan)
    await message.answer('–¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å! \n–í—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ —Å–ª–æ–º–∞–ª–∏ –∫–∞–∑—ë–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∑–∞ 40 –≥—Ä–∏–≤–µ–Ω! üòø',
                         reply_markup=keyboard.ReplyKeyboardRemove())
